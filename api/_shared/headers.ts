/**
 * List of valid HTTP headers that can be implemented.
 */
export const HTTP_HEADERS = [
  'Accept',
  'Accept-CH',
  'Accept-CH-Lifetime',
  'Accept-Charset',
  'Accept-Encoding',
  'Accept-Language',
  'Accept-Patch',
  'Accept-Post',
  'Accept-Ranges',
  'Access-Control-Allow-Credentials',
  'Access-Control-Allow-Headers',
  'Access-Control-Allow-Methods',
  'Access-Control-Allow-Origin',
  'Access-Control-Expose-Headers',
  'Access-Control-Max-Age',
  'Access-Control-Request-Headers',
  'Access-Control-Request-Method',
  'Age',
  'Allow',
  'Alt-Svc',
  'Alt-Used',
  'Authorization',
  'Cache-Control',
  'Clear-Site-Data',
  'Connection',
  'Content-Disposition',
  'Content-DPR',
  'Content-Encoding',
  'Content-Language',
  'Content-Length',
  'Content-Location',
  'Content-Range',
  'Content-Security-Policy',
  'Content-Security-Policy-Report-Only',
  'Content-Type',
  'Cookie',
  'Critical-CH',
  'Cross-Origin-Embedder-Policy',
  'Cross-Origin-Opener-Policy',
  'Cross-Origin-Resource-Policy',
  'Date',
  'Device-Memory',
  'Digest',
  'DNT',
  'Downlink',
  'DPR',
  'Early-Data',
  'ECT',
  'ETag',
  'Expect',
  'Expect-CT',
  'Expires',
  'Forwarded',
  'From',
  'Host',
  'If-Match',
  'If-Modified-Since',
  'If-None-Match',
  'If-Range',
  'If-Unmodified-Since',
  'Keep-Alive',
  'Large-Allocation',
  'Last-Modified',
  'Link',
  'Location',
  'Max-Forwards',
  'NEL',
  'Origin',
  'Permissions-Policy',
  'Pragma',
  'Proxy-Authenticate',
  'Proxy-Authorization',
  'Range',
  'Referrer',
  'Referrer-Policy',
  'Retry-After',
  'RTT',
  'Save-Data',
  'Sec-CH-Prefers-Color-Scheme',
  'Sec-CH-Prefers-Reduced-Motion',
  'Sec-CH-Prefers-Reduced-Transparency',
  'Sec-CH-UA',
  'Sec-CH-UA-Arch',
  'Sec-CH-UA-Bitness',
  'Sec-CH-UA-Full-Version',
  'Sec-CH-UA-Full-Version-List',
  'Sec-CH-UA-Mobile',
  'Sec-CH-UA-Model',
  'Sec-CH-UA-Platform',
  'Sec-CH-UA-Platform-Version',
  'Sec-CH-UA-Fetch-Dest',
  'Sec-CH-UA-Fetch-Mode',
  'Sec-CH-UA-Fetch-Site',
  'Sec-CH-UA-Fetch-User',
  'Sec-GPC',
  'Sec-Purpose',
  'Sec-WebSocket-Accept',
  'Server',
  'Server-Timing',
  'Service-Worker-Navigation-Preload',
  'Set-Cookie',
  'SourceMap',
  'Strict-Transport-Security',
  'TE',
  'Timing-Allow-Origin',
  'Tk',
  'Trailer',
  'Transfer-Encoding',
  'Upgrade',
  'Upgrade-Insecure-Requests',
  'User-Agent',
  'Vary',
  'Via',
  'Viewport-Width',
  'Want-Digest',
  'Warning',
  'Width',
  'WWW-Authenticate',
  'X-Content-Type-Options',
  'X-DNS-Prefetch-Control',
  'X-Forwarded-For',
  'X-Forwarded-Host',
  'X-Forwarded-Proto',
  'X-Frame-Options',
  'X-XSS-Protection'
] as const

/**
 * A type representing the valid HTTP headers that can be implemented.
 */
export type HTTP_HEADER = (typeof HTTP_HEADERS)[number]

/**
 * Checks to see if the passed string is an HTTP header. Note that this is case
 * sensitive.
 *
 * @param maybeHeader the string that may be an HTTP header
 * @returns true if the string is an HTTP header
 */
export function isHTTPHeader(maybeHeader: string): maybeHeader is HTTP_HEADER {
  return HTTP_HEADERS.includes(maybeHeader as HTTP_HEADER)
}

export const headers = {
  "Referrer-Policy": "origin-when-cross-origin",
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
  "X-UA-Compatible": "ie-edge",
  "Cache-Control": "max-age=10, s-maxage=86400, immutable",
  "CDN-Cache-Control": "max-age=60",
  "Vercel-CDN-Cache-Control": "max-age=3600",
  "X-DNS-Prefetch-Control": "on",
  "X-XSS-Protection": "1; mode=block",
  "Strict-Transport-Security": "max-age=63072000; includeSubDomains; preload"
};
