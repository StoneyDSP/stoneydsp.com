@charset "UTF-8";
@import url("@/components/assets/css/framework/fonts/microsoft/cascadia/font-cascadia-dynamic.css") layer(fontFace);
/* @import url("../../src/assets/css/framework/reset.css") layer(reset); */
/* @import url("@/components/assets/css/framework/support.css") layer(global.site.defaults.support); */
/* @import url("@/components/assets/css/framework/defaults.css") layer(global.site.defaults); */
/* @import url("@/components/assets/css/framework/global.css") layer(global); */
/* @import url("../../src/assets/css/framework/helpers.css") layer(global.helpers); */

/* @import url("@/components/assets/css/framework/site.css") layer(global.site); */
/* @import url("./framework/animations/animations.css") layer(global.site.animations); */
/* @import url("./doxygen/doxygen.css") layer(global.site.doxygen); */
/* @import url("./doxygen/tabs.css") layer(site.doxygen.tabs); */
/* @import url("./doxygen/search.css") layer(site.doxygen.search); */

/* @import url("@/components/assets/css/framework/debug/dbg.css") layer(global.site.dbg); */
/* @import url("./framework/debug/lint.css") layer(global.site.dbg.lint); */

@import url("@/components/assets/css/framework/debug/dbg.css");

/* @import url("@/app/globals.css"); */

/*
* CSS Browser Defaults
* StoneyDSP 2023
* See 'support.css' for extensions
*/


/* :root {
	display: block;
	min-width: 100%;
	min-height: 100vh;
	overflow-y: auto;
	overflow-x: hidden;

} */

html {
	display: block;
	line-height: 1.5;
	-webkit-text-size-adjust: 100%;
	-moz-tab-size: 4;
	tab-size: 4;
}

html,
body {
	font-family: 'Segoe UI', Ubuntu, Sans-Serif;
    font-size: calc((15.00px + 0.390625vw) * (15.00 / 18.00));
}

html,
body,
#__next {
  height: 100vh;
  width: 100vw;
  overflow-x: hidden;
}

body {
    display: block;

    margin: 0;
	line-height: inherit;
}

hr {
	margin: 0;
	height: 0;
	color: inherit;
	border-top-width: 1px;
}

abbr:where([title]) {
	text-decoration: underline dotted;
}

h1 {
    display: block;
    font-size: 2.0rem;
    font-weight: inherit;
	margin: 0;
}
h2 {
    display: block;
    font-size: 1.5rem;
    font-weight: inherit;
	margin: 0;
}
h3 {
    display: block;
    font-size: 1.17em;
    font-weight: inherit;
	margin: 0;
}
h4 {
    display: block;
    font-size: 1.0rem;
    font-weight: inherit;
	margin: 0;
}
h5 {
    display: block;
    font-size: 0.83rem;
    font-weight: inherit;
	margin: 0;
}
h6 {
    display: block;
    font-size: 0.67rem;
    font-weight: inherit;
	margin: 0;
}

code,
kbd,
samp,
pre {
	font-family: 'Cascadia Mono', Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
	font-size: 1em;
}

b,
strong {
	font-weight: bolder;
}

small {
	font-size: 80%;
}

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-feature-settings: inherit; /* 1 */
	font-variation-settings: inherit; /* 1 */
	font-size: 100%; /* 1 */
	font-weight: inherit; /* 1 */
	line-height: inherit; /* 1 */
	color: inherit; /* 1 */
	margin: 0; /* 2 */
	padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
	text-transform: none;
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
	cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
	cursor: default;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
	[type='button'],
	[type='reset'],
	[type='submit'] {
	-webkit-appearance: button; /* 1 */
	background-color: transparent; /* 2 */
	background-image: none; /* 2 */
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block; /* 1 */
	vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
	max-width: 100%;
	height: auto;
}

fieldset {
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
	padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
	resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
	opacity: 1; /* 1 */
	color: theme('colors.gray.400', #9ca3af); /* 2 */
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
	display: none;
}








header {
    display: block;
}

footer {
    display: block;
}

main {
    display: block;
}
section {
    display: block;
}
div {
    display: block;
}

article {
    display: block;
}
aside {
    display: block;
}

hgroup {
    display: block;
}
p {
	margin: 0;
    display: block;
}
i {
    font-style: italic;
}
address {
    display: block;
    font-style: italic;
}
/* ¿?¿? seems ok!? */
br {
    display: inline;
}
wbr {
    display: inline;
}

iframe {
    border-width: 2px;
    border-style: inset;
    border-color: initial;
}

head {
    display: none;
}
link {
    display: none;
}
meta {
    display: none;
}
script {
    display: none;
}
title {
    display: none;
}

menu {
    display: block;
    list-style-type: disc;
	margin: 0;
	padding: 0;
}
ul {
    display: block;
    list-style-type: disc;
	margin: 0;
	padding: 0;
}
ol {
    display: block;
    list-style-type: decimal;
	margin: 0;
	padding: 0;
}
li {
    display: list-item;
    text-align: left;
}


/* Tables */
table > table {
    display: table;
    box-sizing: border-box;
    border-color: transparent;
}
table {
    display: table;
    border-collapse: separate;
    box-sizing: border-box;
    text-indent: initial;
    border-spacing: 0;
    border-color: transparent;
}
thead {
    display: table-header-group;
    vertical-align: middle;
    border-color: inherit;
}
tbody {
    display: table-row-group;
    vertical-align: middle;
    border-color: inherit;
}
tfoot {
    display: table-footer-group;
    vertical-align: middle;
    border-color: inherit;
}
colgroup {
    display: table-column-group;
}
col {
    display: table-column;
}
tr {
    display: table-row;
    vertical-align: inherit;
    border-color: inherit;
}
th {
    display: table-cell;
    vertical-align: inherit;
    font-weight: bold;
    text-align: -internal-center;
}
td {
    display: table-cell;
    vertical-align: inherit;
}

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
box-sizing: border-box; /* 1 */
border-width: 0; /* 2 */
border-style: solid; /* 2 */
border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */
}

::before,
::after {
--tw-content: '';
}

[only]::marker {
    text-transform: none;
    text-indent: 0;
}
[only]::before {
    box-sizing: border-box;
}
[only]::after {
    box-sizing: border-box;
}

/* Browser support */

@supports (view-transition-name: root) {
    html {
        view-transition-name: root;
    }
}
@supports (zoom: 1) {
    body {
        zoom: 1;
    }
}
@supports (margin-block: 0.83em) {
    :-webkit-any(article, aside, nav, section) h1 {
        margin-block-start: 0.83em;
        margin-block-end: 0.83em;
    }
}
@supports (margin-inline: 0) or (margin-block: 0.67em) {
    h1 {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 0.67em;
        margin-block-end: 0.67em;
    }
}
@supports (margin-inline: 0) or (margin-block: 0.83em) {
    h2 {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 0.83em;
        margin-block-end: 0.83em;
    }
}
@supports (margin-inline: 0) or (margin-block: 1.0em) {
    h3 {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 1.0em;
        margin-block-end: 1.0em;
    }
}
@supports (margin-inline: 0) or (margin-block: 1.33em) {
    h4 {
      margin-inline-start: 0;
      margin-inline-end: 0;
      margin-block-start: 1.33em;
      margin-block-end: 1.33em;
    }
}
@supports (margin-inline: 0) or (margin-block: 1.67em) {
    h5 {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 1.67em;
        margin-block-end: 1.67em;
    }
}
@supports (margin-inline: 0) or (margin-block: 2.33em) {
    h6 {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 2.33em;
        margin-block-end: 2.33em;
    }
}
@supports (margin-inline: 0) or (margin-block: 1.0em) {
    p {
        margin-inline-start: 0;
        margin-inline-end: 0;
        margin-block-start: 1.0em;
        margin-block-end: 1.0em;
    }
}

@supports (overflow-x: clip) or (overflow-y: clip) {
    img {
        overflow-x: clip;
        overflow-y: clip;
    }
}
@supports (overflow-clip-margin: content-box) {
    img {
        overflow-clip-margin: content-box;
    }
}
@supports (aspect-ratio: auto) {
    /* img[Attributes Style] {
    width: 300px;
    aspect-ratio: auto 300 / 300;
    height: 300px;
    } */
    img {
        aspect-ratio: auto;
    }
}

a:-webkit-any-link {
    color: -webkit-link;
    cursor: pointer;
    text-decoration: underline;
}

@supports (margin-inline: 0) or (margin-block: 1.0em) or (padding-inline-start: 40.0px) {
    menu {
        margin-block-start: 1.0em;
        margin-block-end: 1.0em;
        margin-inline-start: 0;
        margin-inline-end: 0;
        padding-inline-start: 40.0px;
    }
}

@supports (margin-inline: 0) or (margin-block: 1.0em) or (padding-inline-start: 40.0px) {
    ul {
        margin-block-start: 1.0em;
        margin-block-end: 1.0em;
        margin-inline-start: 0;
        margin-inline-end: 0;
        padding-inline-start: 40.0px
    }
}

@supports (margin-inline: 0) or (margin-block: 1.0em) or (padding-inline-start: 40.0px) {
    ol {
        margin-block-start: 1.0em;
        margin-block-end: 1.0em;
        margin-inline-start: 0;
        margin-inline-end: 0;
        padding-inline-start: 40.0px
    }
}

@supports (text-align: -webkit-match-parent) {
    li {
        display: list-item;
    }
}

@supports (-webkit-border-horizontal-spacing: 0) or (-webkit-border-vertical-spacing: 0) {
    table > table {
        -webkit-border-horizontal-spacing: 0;
        -webkit-border-vertical-spacing: 0;
    }
}

@supports (border-image: initial) {
    iframe {
        border-image: initial;
    }
}

@supports (overflow-clip-margin: content-box) {
    iframe {
        overflow-clip-margin: content-box;
    }
}

@supports (overflow: clip) {
    iframe {
        overflow: clip;
    }
}

@supports (font-variant-numeric: tabular-nums) {
    [only]::marker {
        font-variant-numeric: tabular-nums;
    }
}
@supports (unicode-bidi: isolate) {
    [only]::marker {
        unicode-bidi: isolate;
    }
}
@supports (text-align-last: start) {
    [only]::marker {
        text-align-last: start;
    }
}

@supports (-webkit-box-sizing: border-box) {
    [only]::before {
        -webkit-box-sizing: border-box;
    }
    [only]::after {
        -webkit-box-sizing: border-box;
    }
}

@supports (-moz-box-sizing: border-box) {
    [only]::before {
        -moz-box-sizing: border-box;
    }
    [only]::after {
        -moz-box-sizing: border-box;
    }
}

/* Variables */

html {

	--page-background-colour: var(--color__white);
	--page-foreground-colour: var(--color__black);
}

html.dark-mode {

	--page-background-colour: var(--color__black);
	--page-foreground-colour: var(--color__white);

	background-color: var(--color__black);
}

/* img.icon-social {
	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;
}

img.icon-social__github { background-image: var(--icon-social__github);}
img.icon-social__facebook { background-image: var(--icon-social__facebook);}
img.icon-social__instagram { background-image: var(--icon-social__instagram);}
img.icon-social__twitter { background-image: var(--icon-social__twitter);}
img.icon-social__linkedin { background-image: var(--icon-social__linkedin);}

img.brand-logo-512x96 { background-image: var(--brand-logo-512x96);}

img.git-stats-card { background-image: var(--git-stats-card);}
img.top-langs-card { background-image: var(--top-langs-card);}

img.lang-icon-cpp { background-image: var(--lang-icon-cpp);}
img.lang-icon-c { background-image: var(--lang-icon-c);}
img.lang-icon-cmake { background-image: var(--lang-icon-cmake);}
img.lang-icon-nodejs { background-image: var(--lang-icon-nodejs);}
img.lang-icon-js { background-image: var(--lang-icon-js);}
img.lang-icon-ts { background-image: var(--lang-icon-ts);}
img.lang-icon-css { background-image: var(--lang-icon-css);}
img.lang-icon-html { background-image: var(--lang-icon-html);}

img.card-repo__biquads { background-image: var(--card-repo__biquads);}
img.card-repo__ubento { background-image: var(--card-repo__ubento);}
img.card-repo__orfanidis { background-image: var(--card-repo__orfanidis);}
img.card-repo__cxxwin { background-image: var(--card-repo__cxxwin);}
img.card-repo__nonlinearfilters { background-image: var(--card-repo__nonlinearfilters);}
img.card-repo__cmodule { background-image: var(--card-repo__cmodule);}
img.card-repo__audioplugin-svf { background-image: var(--card-repo__audioplugin-svf);}
img.card-repo__audioplugin { background-image: var(--card-repo__audioplugin);}

.footer.vercel {
	width: 212px;
	height: 44px;
	border: 0px;
	background-image: var(--powered-by-vercel);
	background-repeat: no-repeat;
	background-position-x: center;
	background-position-y: bottom;
} */

:root {
    /* Colors */
    --color__unit: hsl(0, 0, 10.00%);

    /* Dimmed black & white to prevent screen reflecting light at user's eyes */
    --color__black: hsl(0, 0%, 0.1%);
    --color__white: hsl(0, 0%, 99.9%);

    /* Neutral grayscale colors */
    --color__neutral-900: hsl(0, 0%, 10%);
    --color__neutral-800: hsl(0, 0%, 20%);
    --color__neutral-700: hsl(0, 0%, 30%);
    --color__neutral-600: hsl(0, 0%, 40%);
    --color__neutral-500: hsl(0, 0%, 50%);
    --color__neutral-400: hsl(0, 0%, 60%);
    --color__neutral-300: hsl(0, 0%, 70%);
    --color__neutral-200: hsl(0, 0%, 80%);
    --color__neutral-100: hsl(0, 0%, 90%);

    --color__red-900: hsl(0, 100%, 10%);
    --color__red-800: hsl(0, 100%, 20%);
    --color__red-700: hsl(0, 100%, 30%);
    --color__red-600: hsl(0, 100%, 40%);
    --color__red-500: hsl(0, 100%, 50%);
    --color__red-400: hsl(0, 100%, 60%);
    --color__red-300: hsl(0, 100%, 70%);
    --color__red-200: hsl(0, 100%, 80%);
    --color__red-100: hsl(0, 100%, 90%);

    --color__yellow-900: hsl(60, 100%, 10%);
    --color__yellow-800: hsl(60, 100%, 20%);
    --color__yellow-700: hsl(60, 100%, 30%);
    --color__yellow-600: hsl(60, 100%, 40%);
    --color__yellow-500: hsl(60, 100%, 50%);
    --color__yellow-400: hsl(60, 100%, 60%);
    --color__yellow-300: hsl(60, 100%, 70%);
    --color__yellow-200: hsl(60, 100%, 80%);
    --color__yellow-100: hsl(60, 100%, 90%);

    --color__blue-900: hsl(240, 100%, 10%);
    --color__blue-800: hsl(240, 100%, 20%);
    --color__blue-700: hsl(240, 100%, 30%);
    --color__blue-600: hsl(240, 100%, 40%);
    --color__blue-500: hsl(240, 100%, 50%);
    --color__blue-400: hsl(240, 100%, 60%);
    --color__blue-300: hsl(240, 100%, 70%);
    --color__blue-200: hsl(240, 100%, 80%);
    --color__blue-100: hsl(240, 100%, 90%);

    --color__green-900: hsl(120, 100%, 10%);
    --color__green-800: hsl(120, 100%, 20%);
    --color__green-700: hsl(120, 100%, 30%);
    --color__green-600: hsl(120, 100%, 40%);
    --color__green-500: hsl(120, 100%, 50%);
    --color__green-400: hsla(120, 100%, 60%, 100%);
    --color__green-300: hsla(120, 100%, 70%, 100%);
    --color__green-200: hsla(120, 100%, 80%, 100%);
    --color__green-100: hsla(120, 100%, 90%, 100%);

    /*
    * Opaques
    */

    /* Opacity units */
    --color__alpha-01: hsla(0, 0%, 0%, 1%);
    --color__alpha-02: hsla(0, 0%, 0%, 2%);
    --color__alpha-05: hsla(0, 0%, 0%, 5%);
    --color__alpha-10: hsla(0, 0%, 0%, 10%);
    --color__alpha-20: hsla(0, 0%, 0%, 20%);
    --color__alpha-50: hsla(0, 0%, 0%, 50%);
    --color__alpha-100: hsla(0, 0%, 0%, 100%);

    /* Dimmed blacks to prevent screen reflecting light at user's eyes */
    --color__black-alpha-01: hsla(0, 0%, 0.01%, 1%);
    --color__black-alpha-02: hsla(0, 0%, 0.01%, 2%);
    --color__black-alpha-05: hsla(0, 0%, 0.01%, 5%);
    --color__black-alpha-10: hsla(0, 0%, 0.01%, 10%);
    --color__black-alpha-20: hsla(0, 0%, 0.01%, 20%);
    --color__black-alpha-50: hsla(0, 0%, 0.01%, 50%);

    /* Dimmed whites to prevent screen reflecting light at user's eyes */
    --color__white-alpha-01: hsla(0, 0%, 99.9%, 1%);
    --color__white-alpha-02: hsla(0, 0%, 99.9%, 2%);
    --color__white-alpha-05: hsla(0, 0%, 99.9%, 5%);
    --color__white-alpha-10: hsla(0, 0%, 99.9%, 10%);
    --color__white-alpha-20: hsla(0, 0%, 99.9%, 20%);
    --color__white-alpha-50: hsla(0, 0%, 99.9%, 50%);

    /* Reds */
    --color__red-900-alpha-10: hsla(0, 100%, 10%, 10%);
    --color__red-700-alpha-10: hsla(0, 100%, 30%, 10%);
    --color__red-500-alpha-10: hsla(0, 100%, 50%, 10%);
    --color__red-300-alpha-10: hsla(0, 100%, 70%, 10%);
    --color__red-100-alpha-10: hsla(0, 100%, 90%, 10%);

    --color__red-900-alpha-50: hsla(0, 100%, 10%, 50%);
    --color__red-700-alpha-50: hsla(0, 100%, 30%, 50%);
    --color__red-500-alpha-50: hsla(0, 100%, 50%, 50%);
    --color__red-300-alpha-50: hsla(0, 100%, 70%, 50%);
    --color__red-100-alpha-50: hsla(0, 100%, 90%, 50%);



    /* Yellows */
    --color__yellow-900-alpha-10: hsla(60, 100%, 10%, 10%);
    --color__yellow-700-alpha-10: hsla(60, 100%, 30%, 10%);
    --color__yellow-500-alpha-10: hsla(60, 100%, 50%, 10%);
    --color__yellow-300-alpha-10: hsla(60, 100%, 70%, 10%);
    --color__yellow-100-alpha-10: hsla(60, 100%, 90%, 10%);

    --color__yellow-900-alpha-50: hsla(60, 100%, 10%, 50%);
    --color__yellow-700-alpha-50: hsla(60, 100%, 30%, 50%);
    --color__yellow-500-alpha-50: hsla(60, 100%, 50%, 50%);
    --color__yellow-300-alpha-50: hsla(60, 100%, 70%, 50%);
    --color__yellow-100-alpha-50: hsla(60, 100%, 90%, 50%);

    /* Greens */
    --color__green-900-alpha-10: hsla(120, 100%, 10%, 10%);
    --color__green-700-alpha-10: hsla(120, 100%, 30%, 10%);
    --color__green-500-alpha-10: hsla(120, 100%, 50%, 10%);
    --color__green-300-alpha-10: hsla(120, 100%, 70%, 10%);
    --color__green-100-alpha-10: hsla(120, 100%, 90%, 10%);

    --color__green-900-alpha-50: hsla(120, 100%, 10%, 50%);
    --color__green-700-alpha-50: hsla(120, 100%, 30%, 50%);
    --color__green-500-alpha-50: hsla(120, 100%, 50%, 50%);
    --color__green-300-alpha-50: hsla(120, 100%, 70%, 50%);
    --color__green-100-alpha-50: hsla(120, 100%, 90%, 50%);

    /* Blues */
    --color__blue-100-alpha-10: hsla(240, 100%, 90%, 10%);
    --color__blue-300-alpha-10: hsla(240, 100%, 70%, 10%);
    --color__blue-500-alpha-10: hsla(240, 100%, 50%, 10%);
    --color__blue-700-alpha-10: hsla(240, 100%, 30%, 10%);
    --color__blue-900-alpha-10: hsla(240, 100%, 10%, 10%);

    --color__blue-100-alpha-50: hsla(240, 100%, 90%, 50%);
    --color__blue-300-alpha-50: hsla(240, 100%, 70%, 50%);
    --color__blue-500-alpha-50: hsla(240, 100%, 50%, 50%);
    --color__blue-700-alpha-50: hsla(240, 100%, 30%, 50%);
    --color__blue-900-alpha-50: hsla(240, 100%, 10%, 50%);


    /*  Set a starting point value */
    --z-index__init: 0;

    /* Set a number to scale (increase and decrease) the starting point by */
    --z-index__scale-depth: 100;

    /*  Calculate a palette by cascading those two vars */
    --z-index__100: calc(var(--z-index__200) - var(--z-index__scale-depth));
    --z-index__200: calc(var(--z-index__300) - var(--z-index__scale-depth));
    --z-index__300: calc(var(--z-index__400) - var(--z-index__scale-depth));
    --z-index__400: calc(var(--z-index__500) - var(--z-index__scale-depth));
    --z-index__500: var(--z-index__init);
    --z-index__600: calc(var(--z-index__500) + var(--z-index__scale-depth));
    --z-index__700: calc(var(--z-index__600) + var(--z-index__scale-depth));
    --z-index__800: calc(var(--z-index__700) + var(--z-index__scale-depth));
    --z-index__900: calc(var(--z-index__800) + var(--z-index__scale-depth));

    /*  Apply the calculations to some well-named vars */
    --z-index__underground: var(--z-index__100);
    --z-index__background: var(--z-index__300);
    --z-index__middleground: var(--z-index__500);
    --z-index__foreground: var(--z-index__700);
    --z-index__overground: var(--z-index__900);


    /* Define brand-specific colors */
    --brand-color__yellow-dark: var(--color__yellow-900);
    --brand-color__yellow: var(--color__yellow-700);
    --brand-color__yellow-light: var(--color__yellow-500);
    --brand-color__bright_yellow: var(--color__yellow-300);
    --brand-color__bright_yellow-light: var(--color__yellow-100);

    --brand-color__blue-dark: var(--color__blue-900);
    --brand-color__blue: var(--color__blue-700);
    --brand-color__blue-light: var(--color__blue-500);
    --brand-color__bright_blue: var(--color__blue-300);
    --brand-color__bright_blue-light: var(--color__blue-100);

    --brand-color__green-dark: var(--color__green-900);
    --brand-color__green: var(--color__green-700);
    --brand-color__green-light: var(--color__green-500);
    --brand-color__bright_green: var(--color__green-300);
    --brand-color__bright_green-light: var(--color__green-100);


    --brand-color__red-dark: var(--color__red-900);
    --brand-color__red: var(--color__red-700);
    --brand-color__red-light: var(--color__red-500);
    --brand-color__bright_red: var(--color__red-300);
    --brand-color__bright_red-light: var(--color__red-100);

    --brand-color__black: var(--color__black);
    --brand-color__gray-dark: var(--color__neutral-700);
    --brand-color__gray: var(--color__neutral-500);
    --brand-color__gray-light: var(--color__neutral-300);
    --brand-color__white: var(--color__white);

    /*
    * Define brand elements using brand colors
    */
    --brand-color__text: var(--color__neutral-100);
    --brand-color__text-light: var(--color__neutral-300);
    --brand-color__text-medium: var(--color__neutral-500);
    --brand-color__text-dark: var(--color__neutral-900);

    /* back-, fore-, and middle-ground colors */
    --brand-color__underground: var(--color__neutral-900);
    --brand-color__background: var(--color__neutral-700);
    --brand-color__middleground: var(--color__neutral-500);
    --brand-color__foreground: var(--color__neutral-300);
    --brand-color__overground: var(--color__neutral-100);

    --brand-color__link: var(--brand-color__yellow-light);
    --brand-color__link-visited: var(--brand-color__yellow);
    --brand-color__link-hover: var(--brand-color__bright_yellow);

    /* Styles */
    --brand-border-radius: 1.5em;
    --brand-shadow: 0 0.25rem 0.25rem var(--color__black);

	--scrollbar-x__width: calc(100vh - (100vh - 100%));
    --scrollbar-y__width: calc(100vw - (100vw - 100%));

	--colour-dull: hsla(0, 0%, 0%, 50%);
	--colour-glow: #00ffff;

	/* Image links */
	/* --brand-logo-512x96: url("https://www.stoneydsp.com/public/StoneyDSP-Regular-512x96d.svg");

	--powered-by-vercel: url("https://www.stoneydsp.com/public/powered-by-vercel.svg");


	--table-gradient: url("https://www.stoneydsp.com/src/assets/css/doxygen/tab_b.png");
	--table-row-gradient: ("https://www.stoneydsp.com/src/assets/css/doxygen/doxygen/nav_h.png");

	--git-stats-card: url("https://github-readme-stats.vercel.app/api?username=nathanjhood&show_icons=true&theme=default");

	--top-langs-card: url("https://github-readme-stats.vercel.app/api/top-langs/?username=nathanjhood&langs_count=8&show_icons=true&theme=default&hide=tex,html&layout=donut");

	--lang-icon-cpp: url("https://www.skillicons.dev/icons?i=cpp&theme=light");
	--lang-icon-c: url("https://www.skillicons.dev/icons?i=c&theme=light");
	--lang-icon-cmake: url("https://www.skillicons.dev/icons?i=cmake&theme=light");
	--lang-icon-nodejs: url("https://www.skillicons.dev/icons?i=nodejs&theme=light");

	--lang-icon-html: url("https://www.skillicons.dev/icons?i=html&theme=light");
	--lang-icon-css: url("https://www.skillicons.dev/icons?i=css&theme=light");
	--lang-icon-ts: url("https://www.skillicons.dev/icons?i=ts&theme=light");
	--lang-icon-js: url("https://www.skillicons.dev/icons?i=js&theme=light");

	--card-repo__biquads: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=Biquads&theme=default");
	--card-repo__ubento: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=UBento&theme=default");
	--card-repo__orfanidis: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=OrfanidisBiquad&theme=default");
	--card-repo__cxxwin: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=CxxWin&theme=default");
	--card-repo__nonlinearfilters: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=NonLinearFilters&theme=default");
	--card-repo__cmodule: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=cmodule&theme=default");
	--card-repo__audioplugin-svf: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=AudioPlugin-svf&theme=default");
	--card-repo__audioplugin: url("https://github-readme-stats.vercel.app/api/pin/?username=nathanjhood&repo=AudioPlugin&theme=default");

	--icon-social__github: url("../../../public/icon__github.svg");
	--icon-social__facebook: url("../../../public/icon__facebook.svg");
	--icon-social__instagram: url("../../../public/icon__insta.svg");
	--icon-social__twitter: url("../../../public/icon__twitter.svg");
	--icon-social__linkedin: url("../../../public/icon__linkedin.svg"); */
}




/* Site */

/* main.site {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	background-color: var(--page-background-colour);
} */

.min-h-screen {
	min-height: 100%;
}

.w-full {
	width: 100%;
}

.max-w-4xl {
	max-width: 56rem; /* 896px */
}

.justify-center {
	justify-content: center;
}

.items-center {
	align-items: center;
}

.flex {
	display: flex;
}
.flex-col {
	flex-direction: column;
}

.grid {
	display: grid;
}
.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}

.gap-14 {
	gap: 3.5rem;
}

@media (min-width: 1024px) {
	.grid-cols-3 {
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}
}
